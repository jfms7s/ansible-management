---
- hosts: all
  gather_facts: true
  become: true
  roles:
    - role: host/install_packages
      install_packages:
        - tar
        - git
        - python3
        - python3-pip
        - curl
      install_pip_modules:
        - jmespath
        - netaddr
        - jinja2-ansible-filters

    - role: host_services/docker 
      when: ansible_architecture != "armv6l"

    - role: host/manage_users
      users:
        - name: "{{ lookup('env', 'USER') }}"
          authorized_key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"
          groups: |
            {{ [ 'sysadmin'] +
              ([] if ansible_architecture == "armv6l" else [ "docker" ] )
            }}
          remove: false
          remove_home: false

    - role: host/manage_volumes
      volumes: "{{ host_volumes | default([]) }}"
  
    - role: host_services/node_exporter

- hosts: network_manager
  gather_facts: true
  become: true
  roles:
    - role: host/static_ip
      network_static_ip:   
        - interface: "{{ network_inteface }}"
          addresses: 
            - "{{ network_inteface_address | ansible.netcommon.ipaddr('address/prefix') }}"
          gateway: "{{ network_gateway_address | ipaddr('address') }}"
          dns:
            - 8.8.8.8
            - 8.8.4.4

    - role: host_services/pi_hole
      network_interface: "{{ network_inteface }}"
      dhcp:
        vodafone_box_mac: "{{ vodafone_box_mac_address }}"
        ACTIVE: true
        START: "{{ network_gateway_address | ansible.netcommon.ipaddr('first_usable') }}"
        END: "{{ network_gateway_address | ansible.netcommon.ipaddr('last_usable') }}"
        ROUTER: "{{ network_gateway_address | ansible.netcommon.ipaddr('address') }}"
        LEASETIME: 24
        IPv6: false
        rapid_commit: false
      dns:
        - 127.0.0.1#5335

- hosts: vpn
  gather_facts: false
  become: true
  tags: vpn
  roles:
    - role: host_services/openvpn
      openvpn:
        protocol: "{{ openvpn_protocol }}"
        address: "{{ openvpn_address }}"
        port: "{{ openvpn_port }}"
        network_inteface: "{{ network_inteface }}" 
        dns: "{{ openvpn_dns }}" 
        subnets:
          - "{{ network_gateway_address | ansible.netcommon.ipaddr('network/prefix') }}"
        clients: "{{ openvpn_clients | default([]) }}"
        revoke: "{{ openvpn_revoke | default([]) }}"

- hosts: monitoring
  gather_facts: true
  become: true
  roles:
    - role: host_services/prometheus
      scrapers: "{{ prometheus_extra_scrapes | default({}) }}"
    - role: host_services/grafana

- hosts: media_server
  gather_facts: true
  become: true
  roles:
    - role: host_services/samba
      samba_shares: "{{ samba_locations }}"

    - role: docker_instances/plex_server
      claim: "{{ plex.location.claim | default('') }}"
      plex_config_directory: "{{ plex.location.plex_configs }}"
      tautulli_config_directory: "{{ plex.location.tautulli_configs }}"
      media_directory: "{{ plex.location.media }}"

    - role: docker_instances/rutorrent
      download_directory: "{{ ru_torrent.location.download }}"
      configuration_directory: "{{ ru_torrent.location.config }}"

    - role: docker_instances/medusa
      medusa_config_directory: "{{ medusa.location.config }}"
      medusa_media_base_directory: "{{ medusa.location.media }}"
      medusa_downloads:
        incoming: "{{ medusa.location.media }}/downloads/shows-incoming"
        finish: "{{ medusa.location.media }}/downloads/shows-finish"
      medusa_media:
        shows_directory: "{{ medusa.location.media }}/media/shows"
        shows_anime_directory: "{{ medusa.location.media }}/media/shows-anime"

    - role: docker_instances/couchpotato
      couchpotato_config_directory: "{{ couchpotato.location.config }}"
      couchpotato_media_base_directory: "{{ couchpotato.location.media }}"    

