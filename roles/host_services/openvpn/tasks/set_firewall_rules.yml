---
# sudo iptables -t nat -I POSTROUTING -s "10.8.0.0/24" -o wlan0 -j MASQUERADE -m comment --comment "openvpn-nat-rule"
- name: Perform NAT readdressing
  iptables:
    ip_version: ipv4
    table: nat
    chain: POSTROUTING
    source: "{{ openvpn_tunnel_network }}"
    out_interface: "{{ openvpn.network_inteface }}"
    jump: MASQUERADE
    comment: openvpn-nat-rule
  notify: iptables.save
#sudo iptables -I INPUT 1 -i "wlan0" -p udp --dport 1194 -j ACCEPT -m comment --comment "openvpn-input-rule"
- name: Allow connections to be established to vpn server
  iptables:
    ip_version: ipv4
    table: filter
    chain: INPUT
    rule_num: 1
    protocol: "{{ openvpn.protocol }}"
    in_interface: "{{ openvpn.network_inteface }}"
    destination_ports: "{{ openvpn.port }}"
    jump: ACCEPT
    comment: openvpn-input-rule
  notify: iptables.save

#sudo iptables -I FORWARD 1 -d "10.8.0.0/24" -i "wlan0" -o "tun0" -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT -m comment --comment "openvpn-forward-rule"
- name: Forward traffic from local network to vpn network
  iptables:
    ip_version: ipv4
    table: filter
    chain: FORWARD
    rule_num: 1
    destination: "{{ openvpn_tunnel_network }}"
    in_interface: "{{ openvpn.network_inteface }}"
    out_interface: "{{ openvpn_tunnel_interface }}"
    ctstate:
      - RELATED
      - ESTABLISHED
    jump: ACCEPT
    comment: openvpn-forward-rule
  notify: iptables.save

#sudo iptables -I FORWARD 2 -s "10.8.0.0/24" -i "tun0" -o "wlan0" -j ACCEPT -m comment --comment "openvpn-forward-rule"
- name: Forward traffic from vpn network to local network 
  iptables:
    ip_version: ipv4
    table: filter
    chain: FORWARD
    rule_num: 2
    source: "{{ openvpn_tunnel_network }}"
    in_interface: "{{ openvpn_tunnel_interface }}"
    out_interface: "{{ openvpn.network_inteface }}"
    jump: ACCEPT
    comment: openvpn-forward-rule
  notify: iptables.save

- name: required tcp rules
  iptables:
    ip_version: ipv4
    chain: INPUT
    protocol: tcp
    destination_ports: 
      - 53 ## dns
      - 80 ## http
      - 22 ## ssh
    jump: ACCEPT
  notify: iptables.save

- name: required udp rules
  iptables:
    ip_version: ipv4
    chain: INPUT
    protocol: udp
    destination_ports: 
      - 67 ## dhcp
      - 53 ## dns
    jump: ACCEPT
  notify: iptables.save

- name: TCP/IP three-way handshakes
  iptables:
    ip_version: ipv4
    chain: INPUT
    ctstate:
      - RELATED
      - ESTABLISHED
    jump: ACCEPT
  notify: iptables.save

- name: loopback
  iptables:
    ip_version: ipv4
    chain: INPUT
    in_interface: lo
    jump: ACCEPT
  notify: iptables.save

- name: reject udp rules
  iptables:
    ip_version: ipv4
    chain: INPUT
    protocol: tcp
    in_interface: wlan0
    destination_ports: 
      - 80 ## http
      - 443 ## https
    reject_with: icmp-port-unreachable
    jump: REJECT
  notify: iptables.save

- name: reject tcp rules
  iptables:
    ip_version: ipv4
    chain: INPUT
    protocol: tcp
    destination_ports:
      - 443 ## https
    reject_with: tcp-reset
    jump: REJECT
  notify: iptables.save

- name: drop trafic not in rules
  iptables:
    ip_version: ipv4
    chain: INPUT
    jump: DROP
  notify: iptables.save
  