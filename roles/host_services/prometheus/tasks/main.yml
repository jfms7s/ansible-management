---
- name: Get prometheus last build info
  uri:
    url: "https://api.github.com/repos/prometheus/prometheus/releases/latest"
    return_content: yes
  register: git_response

- name: Check current node_exporter version
  command: "/opt/prometheus/prometheus --version"
  failed_when: false
  changed_when: false
  register: build_info

- name: Get Artifact
  block:
    - name: Create required dirs
      file:
        path: "/tmp/prometheus"
        state: directory
      loop:
        - /tmp/prometheus
        - /etc/opt/prometheus
    - name: Get Latest artifact
      get_url:                                                           
        url: "{{ (git_response.content | from_json) | json_query('assets[? contains(browser_download_url,`linux`) && contains(browser_download_url,`'+ architecture_index[ansible_architecture] +'`)].browser_download_url') | first }}"
        dest: "/tmp/prometheus/prometheus.tar.gz"

    - name: Unarchive artifact
      unarchive:
        src: "/tmp/prometheus/prometheus.tar.gz"
        dest: "/tmp/prometheus"
        extra_opts: [--strip-components=1]
        remote_src: yes

    - name: Remove remove prometheus zipped artifact
      file:
        path: "/tmp/prometheus/prometheus.tar.gz"
        state: absent

    - name: Copy Prometheus to /opt/
      ansible.builtin.copy:
        src: /tmp/prometheus/
        dest: /opt/prometheus/
        remote_src: true

  always:
    - name: Remove temp dir
      file:
        path: "/tmp/prometheus"
        state: absent
  when: (git_response.content | from_json).tag_name | replace('v','') not in (build_info.stdout | default('') )

- name: Add Prometheus as a service
  import_role:
    name: host/manage_services
  vars:
    services:
      prometheus:
        Unit:
          Description: Prometheus Server
          Documentation: https://prometheus.io/docs/introduction/overview/
          After: network-online.target
        Service:
          ExecStart: "/opt/prometheus/prometheus --config.file=/etc/opt/prometheus/prometheus.yml --storage.tsdb.path=/opt/prometheus/data"
          Restart: on-failure
        Install:
          WantedBy: multi-user.target
  register: servie_register
  notify: systemd.reload

- meta: flush_handlers
  when: servie_register.change == true

- name: Set scrappets
  template: 
    src: prometheus.yml.j2
    dest: /etc/opt/prometheus/prometheus.yml
    backup: yes
  notify:
    - service.restart.prometheus

- name: Activate prometheus
  systemd:
    name: prometheus
    state: started
    enabled: yes
    masked: no
  